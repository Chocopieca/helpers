@import "../values";

@mixin generator-cols($cols, $breakpoint, $BPTitle) {

  @for $i from 1 through $cols {
    .col-#{$i} {
      flex: 0 0 auto;
      width: #{($i / 12) * 100}#{'%'};
    }
  }
  @for $i from 1 through $cols {
    @media ('min-width': #{$breakpoint}px) {
      .col-#{$BPTitle}-#{$i} {
        flex: 0 0 auto;
        width: #{($i / 12) * 100}#{'%'};
      }
    }
  }

  @media ('min-width': #{$breakpoint}px) {
    .col-#{$BPTitle} {
      flex: 1 0 0;
    }
  }
}

@mixin generator-container($container-width, $breakpoint: null, $BPTitle: null) {

  @if($breakpoint == null) {
    .container {
      width: #{$container-width};
    }
  } @else {
    @media ('min-width': #{$breakpoint}px) {
      .container-#{$BPTitle} {
        width: #{$container-width};
      }
    }
  }
}

@mixin start($breakpoints, $container-width, $cols) {
  @each $breakpoint in $breakpoints {
    @include generator-cols($cols, nth($breakpoint, 1), nth($breakpoint, 2));
    @each $width in $container-width {
      @include generator-container($width, nth($breakpoint, 1), nth($breakpoint, 2));
    }
  }

  @each $width in $container-width {
    @include generator-container($width);
  }
}

.col {
  flex: 1 0 0%;
}

.row {
  display: flex;
  flex-wrap: wrap;
}

.container-fluid {
  width: 100%;
  margin: 0 auto;
}

@include start($breakpoints, $container-width, $cols);

//.test {
//  content: #{$breakpoint}px;
//}